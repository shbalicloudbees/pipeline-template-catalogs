pipeline {
  agent {
    kubernetes {
      yaml """
kind: Pod
spec:
  containers:
    - name: maven
      image: maven:3.5.4-jdk-8-slim
      command: ["tail", "-f", "/dev/null"]  
      imagePullPolicy: Always 
      resources:  
        requests:
          memory: "1Gi"
          cpu: "500m"
        limits:
          memory: "1Gi"
"""
     defaultContainer 'maven'
    }
  }

    stages {
        stage('Checkout') { 
            steps {
                // git credentialsId: "${github_creds}" , url: "${github_repo}" 
              checkout([$class: 'GitSCM',
                        branches: [[name: '*/master']], 
                        extensions: [], 
                        userRemoteConfigs: [[credentialsId: "${github_creds}", url: "${github_repo}" ]]])
            }
        }
        stage('Build') { 
            steps {
                sh 'mvn -B -DskipTests clean package' 
            }
        }
    }

    post {

      // Email Ext plugin: 
      success {  

           //   sh 'echo "SUCCESSFUL BUILD, sending  email ..."'
        
        emailext (
            subject: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
            body: """<p>SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
              <p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>""",
            to: "${emailRecipient}",
            from: "buildNotifications@emailaddress.com"
          )
          
      }

      failure {
        // sh 'echo "FAILED BUILD, sending  email ..."'
        
        emailext (
            subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
            body: """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
              <p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>""",
            to: "${emailRecipient}",
            from: "buildNotifications@emailaddress.com"
          )
          
      }
  }
}
